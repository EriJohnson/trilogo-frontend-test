[{"D:\\www\\trilogo-frontend-test\\src\\index.js":"1","D:\\www\\trilogo-frontend-test\\src\\App.js":"2","D:\\www\\trilogo-frontend-test\\src\\reportWebVitals.js":"3","D:\\www\\trilogo-frontend-test\\src\\components\\Kanban\\index.js":"4","D:\\www\\trilogo-frontend-test\\src\\components\\Columns\\index.js":"5","D:\\www\\trilogo-frontend-test\\src\\components\\Ticket\\index.js":"6","D:\\www\\trilogo-frontend-test\\src\\layout\\Main\\index.js":"7","D:\\www\\trilogo-frontend-test\\src\\components\\NewTicket\\index.js":"8"},{"size":193,"mtime":1607707481745,"results":"9","hashOfConfig":"10"},{"size":174,"mtime":1608118125691,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":455,"mtime":1608070358327,"results":"13","hashOfConfig":"10"},{"size":976,"mtime":1608070358324,"results":"14","hashOfConfig":"10"},{"size":1445,"mtime":1608070358329,"results":"15","hashOfConfig":"10"},{"size":804,"mtime":1608070358387,"results":"16","hashOfConfig":"10"},{"size":3657,"mtime":1607982284164,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"t5hm2u",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\www\\trilogo-frontend-test\\src\\index.js",[],["39","40"],"D:\\www\\trilogo-frontend-test\\src\\App.js",[],"D:\\www\\trilogo-frontend-test\\src\\reportWebVitals.js",[],["41","42"],"D:\\www\\trilogo-frontend-test\\src\\components\\Kanban\\index.js",[],"D:\\www\\trilogo-frontend-test\\src\\components\\Columns\\index.js",["43"],"import './styles.less'\r\n\r\nimport { Row, Button } from 'antd'\r\n\r\nfunction Column({ isOver, title, children }) {\r\n  function verifyClassName(title) {\r\n    const Types = {\r\n      Executados: 'column__header--executados',\r\n      Vistoriados: 'column__header--vistoriados',\r\n      Arquivados: 'column__header--arquivados',\r\n      default: 'column__header--abertos',\r\n    }\r\n\r\n    return Types[title] || Types.default\r\n  }\r\n\r\n  const typeColumn = verifyClassName(title)\r\n  const isHighlightColumn = isOver ? ' highlight-region' : ''\r\n\r\n  console.log('isOver', isOver)\r\n\r\n  return (\r\n    <div className='column'>\r\n      <div className={`column__header ${isHighlightColumn}`}>\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className='column__content'>{children}</div>\r\n      <Row justify='center'>\r\n        <Button className='column__button' shape='round'>\r\n          Carregar mais\r\n        </Button>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Column\r\n","D:\\www\\trilogo-frontend-test\\src\\components\\Ticket\\index.js",["44","45","46"],"import React, { useState, useRef } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport ITEM_TYPE from '../../data/types'\r\n\r\nimport { Badge, Menu, Dropdown, message } from 'antd'\r\n\r\nimport TicketLogo from '../../assets/ticket-menu.svg'\r\n\r\nimport './styles.less'\r\n\r\nfunction handleMenuClick(e) {\r\n  message.info('Click on menu item.')\r\n  console.log('click', e)\r\n}\r\n\r\nconst menu = (\r\n  <Menu onClick={handleMenuClick}>\r\n    <Menu.Item key='1'>Editar</Menu.Item>\r\n    <Menu.Item key='2'>Excluir</Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nconst Ticket = ({ type, item, index, moveItem }) => {\r\n  const ref = useRef(null)\r\n  const [, drop] = useDrop({\r\n    accept: ITEM_TYPE,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index\r\n      const hoverIndex = index\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n\r\n      const hoveredRect = ref.current.getBoundingClientRect()\r\n      const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2\r\n      const mousePosition = monitor.getClientOffset()\r\n      const hoverClientY = mousePosition.y - hoveredRect.top\r\n\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n      moveItem(dragIndex, hoverIndex)\r\n      item.index = hoverIndex\r\n    },\r\n  })\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ITEM_TYPE, ...item, index },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  })\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const onOpen = () => setShow(true)\r\n\r\n  const onClose = () => setShow(false)\r\n\r\n  drag(drop(ref))\r\n\r\n  return (\r\n    <>\r\n      <div className='ticket' ref={ref} style={{ opacity: isDragging ? 0 : 1 }}>\r\n        <div className='ticket__header'>\r\n          <Badge\r\n            count={type}\r\n            style={{\r\n              backgroundColor: '#CAD1EB',\r\n              color: '#1F1F49',\r\n              fontSize: 12,\r\n              paddingLeft: 10,\r\n              paddingRight: 10,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className='ticket__content'>\r\n          <div>\r\n            <span className='number'>{item.id}</span>\r\n          </div>\r\n\r\n          <div>\r\n            <span className='description'>{item.description}</span>\r\n          </div>\r\n        </div>\r\n        <div className='ticket__footer'>\r\n          <div>\r\n            <span className='assignee'>{item.assignee}</span>\r\n          </div>\r\n          <div>\r\n            <Dropdown\r\n              overlay={menu}\r\n              placement={'bottomCenter'}\r\n              trigger={['click']}\r\n            >\r\n              <img src={TicketLogo} alt='Menu do ticket' />\r\n            </Dropdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ticket\r\n",["47","48"],"D:\\www\\trilogo-frontend-test\\src\\layout\\Main\\index.js",[],"D:\\www\\trilogo-frontend-test\\src\\components\\NewTicket\\index.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":17,"column":9,"nodeType":"57","messageId":"58","endLine":17,"endColumn":19},{"ruleId":"55","severity":1,"message":"59","line":62,"column":10,"nodeType":"57","messageId":"58","endLine":62,"endColumn":14},{"ruleId":"55","severity":1,"message":"60","line":64,"column":9,"nodeType":"57","messageId":"58","endLine":64,"endColumn":15},{"ruleId":"55","severity":1,"message":"61","line":66,"column":9,"nodeType":"57","messageId":"58","endLine":66,"endColumn":16},{"ruleId":"49","replacedBy":"62"},{"ruleId":"51","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'typeColumn' is assigned a value but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.",["64"],["65"],"no-global-assign","no-unsafe-negation"]